(function(c,d){typeof exports=="object"&&typeof module<"u"?module.exports=d(require("qrcode"),require("jsqr")):typeof define=="function"&&define.amd?define(["qrcode","jsqr"],d):(c=typeof globalThis<"u"?globalThis:c||self,c.JsQRGB=d(c.qrcode,c.jsqr))})(this,function(c,d){"use strict";var y=Object.defineProperty;var q=(c,d,b)=>d in c?y(c,d,{enumerable:!0,configurable:!0,writable:!0,value:b}):c[d]=b;var f=(c,d,b)=>q(c,typeof d!="symbol"?d+"":d,b);const b=n=>new Uint8Array([...n,...new Array(3-n.length%3).fill(0).map((t,r)=>r)]),l=(n,t)=>{const r=document.createElement("canvas"),a=r.getContext("2d");return c.toCanvas(r,[{data:n,mode:"byte"}],t),a.getImageData(0,0,t.width,t.height)},m=(n,t)=>{const{size:r=600}=t||{},a=typeof n=="string"?new TextEncoder().encode(n):n,h=b(a),o={r:new Uint8Array([0,...h.slice(0,h.length/3)]),g:new Uint8Array([1,...h.slice(h.length/3,h.length*2/3)]),b:new Uint8Array([2,...h.slice(h.length*2/3,h.length)])},u={r:l(o.r,{width:r,height:r}),g:l(o.g,{width:r,height:r}),b:l(o.b,{width:r,height:r})},s=new ImageData(r,r);for(let g=0;g<s.data.length;g+=4)s.data[g]=u.r.data[g],s.data[g+1]=u.g.data[g+1],s.data[g+2]=u.b.data[g+2],s.data[g+3]=255;return s},w=n=>n.slice(0,n.length-n[n.length-1]);class D{constructor(t){f(this,"threshold");f(this,"min");f(this,"max");f(this,"cache",new Map);f(this,"binarization",t=>{if(this.cache.has(t))return this.cache.get(t);const r=t>=this.threshold?this.max:this.min;return this.cache.set(t,r),r});t===void 0||(t={}),this.threshold=(t==null?void 0:t.threshold)??150,this.min=(t==null?void 0:t.min)??0,this.max=(t==null?void 0:t.max)??255}}return{generate:m,recognize:n=>{const{width:t,height:r}=n,a={r:new ImageData(t,r),g:new ImageData(t,r),b:new ImageData(t,r)},h=new D().binarization;for(let e=0;e<n.data.length;e+=4){const i={r:h(n.data[e]),g:h(n.data[e+1]),b:h(n.data[e+2]),a:255};a.r.data[e]=i.r,a.r.data[e+1]=i.r,a.r.data[e+2]=i.r,a.r.data[e+3]=i.a,a.g.data[e]=i.g,a.g.data[e+1]=i.g,a.g.data[e+2]=i.g,a.g.data[e+3]=i.a,a.b.data[e]=i.b,a.b.data[e+1]=i.b,a.b.data[e+2]=i.b,a.b.data[e+3]=i.a}const o=d(a.r.data,a.r.width,a.r.height),u=d(a.g.data,a.g.width,a.g.height),s=d(a.b.data,a.b.width,a.b.height);if(!o||!u||!s)return;const g=new Uint8Array([o.binaryData,u.binaryData,s.binaryData].sort((e,i)=>e[0]-i[0]).map(e=>e.slice(1)).flat());return w(g)}}});
